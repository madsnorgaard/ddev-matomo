# Details about the install.yaml file are at https://ddev.readthedocs.io/en/latest/users/extend/additional-services/#sections-and-features-of-ddev-get-add-on-installyaml

name: matomo

# pre_install_actions - list of actions to run before installing the addon.
# Examples would be removing an extraneous docker volume,
# or doing a sanity check for requirements.
# DDEV environment variables can be interpolated into these actions
pre_install_actions:
  # Create necessary directories for Matomo data persistence
  - |
    #ddev-description:Create Matomo directories and gitkeep files
    mkdir -p .ddev/matomo/config
    mkdir -p .ddev/matomo/misc
    
    # Create .gitkeep files to maintain directory structure
    touch .ddev/matomo/.gitkeep
    touch .ddev/matomo/config/.gitkeep
    touch .ddev/matomo/misc/.gitkeep
  
  
  # Setup gitignore for Matomo files
  - |
    #ddev-description:Setup gitignore for Matomo runtime files
    if [ ! -f .ddev/.gitignore ]; then
      echo "# DDEV files that should not be committed" > .ddev/.gitignore
      echo "" >> .ddev/.gitignore
    fi
    
    # Add Matomo-specific ignores if not already present
    if ! grep -q "# Matomo runtime files" .ddev/.gitignore 2>/dev/null; then
      echo "" >> .ddev/.gitignore
      echo "# Matomo runtime files (auto-generated)" >> .ddev/.gitignore
      echo "matomo/config/*.php" >> .ddev/.gitignore
      echo "matomo/config/*.ini.php" >> .ddev/.gitignore
      echo "matomo/misc/*.dat" >> .ddev/.gitignore
      echo "matomo/misc/*.mmdb" >> .ddev/.gitignore
      echo "matomo/misc/user/" >> .ddev/.gitignore
    fi

# - "docker volume rm ddev-${DDEV_PROJECT}_solr 2>/dev/null || true"
#- |
#  # Using #ddev-nodisplay tells ddev to be quiet about this action and not show it or its output.
#  #ddev-nodisplay
#  #ddev-description:Remove solr volume
#  if ! ( ddev debug capabilities 2>/dev/null | grep multiple-dockerfiles >/dev/null 2>&1 ) ; then
#    echo "This add-on requires DDEV v1.19.4 or higher, please upgrade." && exit 2
#  fi
#- 'echo "what is your platform.sh token" && read x'

# This item shows templating using DDEV environment variables.
# -
#   #ddev-description:Touch a file to create it
#   touch somefile.${DDEV_PROJECT_TYPE}.${DDEV_DOCROOT}.txt
#

# This item shows complex go templating possibilities based on yaml_read_files
#- |
#- #ddev-description:Create a config.platformsh.yaml
#  cat <<EOF >.ddev/config.platformsh.yaml
#  php_version: {{ trimPrefix "php:" .platformapp.type }}
#  database:
#    type: {{ regexReplaceAll ":.*$" .services.db.type "" }}
#    version: {{ regexReplaceAll "^.*:" .services.db.type "" }}
#
#  docroot: {{ dig "web" "locations" "/" "root" "notfound" .platformapp }}
#  {{ if eq .platformapp.build.flavor "composer" }}
#  hooks:
#    post-start:
#      - composer: install
#  {{ if .platformapp.hooks.deploy }}
#      - exec: "{{ trimAll "\n" .platformapp.hooks.deploy | splitList "\n" | join ` && ` }}"
#  {{ end }}
#  {{ end }}
#
#  EOF

# list of files and directories listed that are copied into project .ddev directory
# Each file should contain #ddev-generated so it can be replaced by a later `ddev get`
# if it hasn't been modified by the user.
# DDEV environment variables can be interpolated into these filenames
# If you use directories, they must be directories that are managed
# by this add-on, or removal could remove things that are not owned by it
project_files:
- docker-compose.matomo.yaml
- configure-matomo.sh

# List of files and directories that are copied into the global .ddev directory
# DDEV environment variables can be interpolated into these filenames
global_files:
# - commands/web/add-on-command
# - homeadditions/some-file.txt

# List of add-on names that this add-on depends on
dependencies:
# - redis

# DDEV environment variables can be interpolated into these actions
post_install_actions:
  - |
    #ddev-description:Configure Matomo version
    echo ""
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo "📋 Matomo Version Configuration"
    echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    echo ""
    echo "Choose Matomo version:"
    echo "1) Matomo 5 (latest - recommended)"
    echo "2) Matomo 4 (LTS - until Nov 2025)"
    echo "3) Keep default (Matomo 5)"
    echo ""
    
    read -p "Enter choice (1-3) or press Enter for default: " matomo_choice
    
    case "${matomo_choice:-3}" in
        1)
            sed -i 's/image: matomo:.*/image: matomo:5/' .ddev/docker-compose.matomo.yaml
            echo "✓ Set to Matomo 5 (latest)"
            ;;
        2)
            sed -i 's/image: matomo:.*/image: matomo:4/' .ddev/docker-compose.matomo.yaml
            echo "✓ Set to Matomo 4 (LTS)"
            ;;
        *)
            echo "✓ Using default Matomo 5"
            ;;
    esac

  - |
    #ddev-description:Create Matomo database
    echo "Creating Matomo database..."
    ddev mysql -e "CREATE DATABASE IF NOT EXISTS matomo;" || true
  
  - |
    echo ""
    echo "=========================================="
    echo "✅ Matomo add-on installed successfully!"
    echo "=========================================="
    echo ""
    echo "📋 Next steps:"
    echo ""
    echo "1. Restart DDEV:"
    echo "   ddev restart"
    echo ""
    echo "2. Visit your Matomo instance:"
    echo "   https://matomo.${DDEV_SITENAME}.${DDEV_TLD}"
    echo ""
    echo "3. Complete the setup wizard with these database settings:"
    echo "   • Database Server: db"
    echo "   • Database Name: matomo"
    echo "   • Username: db"
    echo "   • Password: db"
    echo "   • Table Prefix: matomo_ (recommended)"
    echo ""
    echo "📝 Configuration:"
    echo "   To change Matomo version or settings later:"
    echo "   • Run: .ddev/configure-matomo.sh"
    echo "   • Or edit: .ddev/docker-compose.matomo.yaml directly"
    echo ""
    echo "🗂️  Git Integration:"
    echo "   • Runtime files automatically excluded from git"
    echo "   • Directory structure preserved with .gitkeep files"
    echo "   • Safe for team development and CI/CD"
    echo ""
    echo "📚 Documentation:"
    echo "   https://github.com/madsnorgaard/ddev-matomo"
    echo ""
# - touch somefile.${GOOS}.${DDEV_WEBSERVER}
# - perl -pi -e 's/oldstring/newstring/g' docker-compose.matomo.yaml

# Shell actions that can be done during removal of the add-on
removal_actions:
  - rm -rf .ddev/matomo

# Advanced usage - yaml files can be read in and then used as go template actions
# in pre_install_actions and post_install_actions
# See example in
# https://github.com/rfay/ddev/blob/20220606_yaml_read_experiment/cmd/ddev/cmd/testdata/TestCmdGetComplex/recipe/install.yaml
yaml_read_files:
# someyaml: someyaml.yaml
# otheryaml: someotheryaml.yaml
